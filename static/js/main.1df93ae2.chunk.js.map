{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","reportWebVitals.js","index.js","App.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","target","value","setState","handleSubmit","e","preventDefault","matchContact","alert","trim","contact","id","makeUniqId","props","onSubmit","reset","contacts","reduce","acc","includes","this","className","s","form","htmlFor","label","type","placeholder","onChange","input","button","Component","ContactList","handleClick","contactList","map","onClick","Filter","container","App","filter","onContactFormSubmit","filterContactsByKeyWord","keyWord","toLowerCase","onFilterContactsChange","deleteContact","localStorage","getItem","parsedContacts","JSON","parse","prevProps","newContacts","setItem","stringify","app","logo","contactsContainer","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1df93ae2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__2bdOW\",\"input\":\"Filter_input__cbC7V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1Dcy-\",\"label\":\"ContactForm_label__1Oyxa\",\"input\":\"ContactForm_input__3VOn7\",\"button\":\"ContactForm_button__1fo0Y\"};","import { Component } from \"react\";\r\nimport { v4 as makeUniqId } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const isNotUniqContactName = this.matchContact(name);\r\n\r\n    if (isNotUniqContactName) {\r\n      return alert(`${name} is alredy in contacts!`);\r\n    } else if (name.trim() && number.trim()) {\r\n      const id = makeUniqId();\r\n      const contact = { name, number, id };\r\n\r\n      this.props.onSubmit(contact);\r\n      this.reset();\r\n    }\r\n  };\r\n\r\n  matchContact = (contact) => {\r\n    const { contacts } = this.props;\r\n    const contactNames = contacts.reduce((acc, { name }) => [...acc, name], []);\r\n\r\n    return contactNames.includes(contact);\r\n  };\r\n\r\n  reset = () => this.setState({ name: \"\", number: \"\" });\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.form}>\r\n        <label htmlFor=\"name\" className={s.label}>\r\n          Name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type name!\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={this.handleChange}\r\n          className={s.input}\r\n          id=\"name\"\r\n        />\r\n\r\n        <label htmlFor=\"number\" className={s.label}>\r\n          Number\r\n        </label>\r\n        <input\r\n          type=\"tel\"\r\n          placeholder=\"Type number!\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={this.handleChange}\r\n          className={s.input}\r\n          id=\"number\"\r\n        />\r\n\r\n        <button type=\"submit\" className={s.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n  contact: PropTypes.oneOfType([\r\n    PropTypes.array.isRequired,\r\n    PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n        id: PropTypes.string.isRequired,\r\n      })\r\n    ),\r\n  ]),\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, handleClick }) => (\r\n  <ul className={s.contactList}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className={s.contact}>\r\n        <h3 className={name}>Name: {name}</h3>\r\n        <p className={number}>Number: {number}</p>\r\n        <button\r\n          type=\"button\"\r\n          id={id}\r\n          onClick={handleClick}\r\n          className={s.button}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contact: PropTypes.oneOfType([\r\n    PropTypes.array.isRequired,\r\n    PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n        id: PropTypes.string.isRequired,\r\n      })\r\n    ),\r\n  ]),\r\n  handleClick: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <div className={s.container}>\r\n    <label>\r\n      Find contacts by name:\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        className={s.input}\r\n      />\r\n    </label>\r\n  </div>\r\n);\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport s from \"./App.module.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, { contacts }) {\n    const newContacts = this.state.contacts;\n\n    if (newContacts !== contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(newContacts));\n    }\n  }\n\n  onContactFormSubmit = (contact) => {\n    const { contacts } = this.state;\n\n    this.setState({ contacts: [...contacts, contact] });\n  };\n\n  filterContactsByKeyWord = () => {\n    const { contacts, filter } = this.state;\n    const keyWord = filter.toLowerCase();\n\n    return contacts.filter(({ name }) => name.toLowerCase().includes(keyWord));\n  };\n\n  onFilterContactsChange = ({ target: { value } }) => {\n    this.setState({ filter: value });\n  };\n\n  deleteContact = ({ target }) => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(({ id }) => id !== target.id),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const contacts = this.filterContactsByKeyWord();\n\n    return (\n      <div className={s.app}>\n        <h1 className={s.logo}>Phonebook</h1>\n        <div className={s.container}>\n          <ContactForm\n            contacts={contacts}\n            onSubmit={this.onContactFormSubmit}\n          />\n          <div className={s.contactsContainer}>\n            <h2 className={s.title}>Contacts</h2>\n            <Filter value={filter} onChange={this.onFilterContactsChange} />\n            <ContactList contacts={contacts} handleClick={this.deleteContact} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3uULt\",\"logo\":\"App_logo__3-GSC\",\"container\":\"App_container__3OGuB\",\"contactsContainer\":\"App_contactsContainer__AR75b\",\"title\":\"App_title__3AS_D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactList_contact__2gqf3\",\"button\":\"ContactList_button__327Jt\"};"],"sourceRoot":""}